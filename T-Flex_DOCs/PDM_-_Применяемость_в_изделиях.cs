using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Windows.Forms;
using TFlex.DOCs.Model.Macros;
using TFlex.DOCs.Model.Macros.ObjectModel;
using TFlex.DOCs.Common.Comparers;

public class Macro : MacroProvider
{
	private static readonly string Наименование = "0eca6409-3b99-4e8f-8188-6aaed073e37f";
	private static readonly string НачальноеИзделие = "d12a6e92-8cc7-4fed-a0e6-b370d9472b3d";
	private static readonly string КонечноеИзделие = "a7f06fc0-39e2-4f81-ad9f-814666abd876";
	
	private static readonly string КлассификаторИзделий = "07e0dfaa-305e-468b-acd7-b6dad340da8f";
	private static readonly string ТочнаяЭСИ = "e8b5ddc7-6be6-4152-b928-fdb1add872cf";
		
    public Macro(MacroContext context)
        : base(context)
    {
    }

    public override void Run()
    {
    }
    
    public void Сохранение()
    {
    	var началоДиапазона = НайтиОбъект(КлассификаторИзделий, "Guid", Параметр[НачальноеИзделие]);
    	var конецДиапазона = НайтиОбъект(КлассификаторИзделий, "Guid", Параметр[КонечноеИзделие]);
    	
    	if(началоДиапазона == null && конецДиапазона == null)
    	{	
    		Ошибка("Не заданы границы диапазона");
    	}
    	
    	else if(началоДиапазона == null)
    	{
    		if(конецДиапазона[ТочнаяЭСИ])
    			Параметр[Наименование] = $"Для изделия '{конецДиапазона}' и более ранних";
    		else
    			Параметр[Наименование] = $"Для последнего изделия в составе '{конецДиапазона}' и более ранних";
    	}
    	
    	else if(конецДиапазона == null)
    	{
    		if(началоДиапазона[ТочнаяЭСИ])
    			Параметр[Наименование] = $"Для изделия '{началоДиапазона}' и всех последующих";
    		else
    			Параметр[Наименование] = $"Для первого изделия в составе '{началоДиапазона}' и всех последующих";
    	}
    	
    	else if(CompareProducts(началоДиапазона, конецДиапазона) == 0)
    	{
    		if(началоДиапазона[ТочнаяЭСИ])
    			Параметр[Наименование] = $"Для изделия '{началоДиапазона}'";
    		else
    			Параметр[Наименование] = $"Для всех изделий, входящих в '{началоДиапазона}'";
    	}
    	
    	else
    	{
    		var начало = началоДиапазона[ТочнаяЭСИ] ? $"Начиная с '{началоДиапазона}'" : $"Начиная с первого изделия в составе '{началоДиапазона}'";
            
    		if(CompareProducts(началоДиапазона, конецДиапазона) < 0)
    		{
    			if(конецДиапазона[ТочнаяЭСИ])
    				Параметр[Наименование] = $"{начало} заканчивая '{конецДиапазона}'";
    			else
    				Параметр[Наименование] = $"{начало} до первого изделия в составе '{конецДиапазона}'";
    		}
    		else
    		{
    			if(конецДиапазона[ТочнаяЭСИ])
    				Ошибка("Ошибка задания диапазона");
    			else
    				Параметр[Наименование] = $"{начало} до последнего изделия в составе '{конецДиапазона}'";
    		}
    	}	
    }
    
    private int CompareProducts(Объект изделие1, Объект изделие2)
    {
    	return NaturalStringComparer.Instance.Compare(СоставнойНомер(изделие1), СоставнойНомер(изделие2));
    }
    
    private string СоставнойНомер(Объект изделие)
    {
    	var текущееИзделие = изделие;
    	string result = "";
    	while (текущееИзделие != null)
    	{
    		string текущийНомер = текущееИзделие["№"];
    		result = $"{текущийНомер}.{result}";
    		текущееИзделие = текущееИзделие.РодительскийОбъект;
    	}
    	
    	return result;
    }
}
