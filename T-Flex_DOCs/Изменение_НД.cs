using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
//using System.Windows.Forms;
using TFlex.DOCs.Model.Macros;
using TFlex.DOCs.Model.Macros.ObjectModel;
using TFlex.DOCs.Model.Desktop;
using TFlex.DOCs.Model.References;
using TFlex.DOCs.Model.References.Files;
using TFlex.DOCs.Model.Classes;
using TFlex.DOCs.Model;

public class MacroSpec : MacroProvider
{
    public MacroSpec(MacroContext context)
        : base(context)
    {
    }

    private const string ИнвентарнаяКарточкаСвязь = "e816d06b-f754-4855-a095-5e716398de1b";
    private const string НормативныйДокументСвязь = "85e427d2-59ae-4f3a-ba55-a926905c1b16";

    private const string СвязьКарточкиСДокументом = "21f51e61-1414-4d2a-88c7-b16a13bf5d31";

    public override void Run()
    {
        var инвентарнаяКарточка = ТекущийОбъект.СвязанныйОбъект[ИнвентарнаяКарточкаСвязь];
        var нормативныйДокумент = ТекущийОбъект.СвязанныйОбъект[НормативныйДокументСвязь];
        if (инвентарнаяКарточка != null)
        {
            //Если обе связи заполнены, то выходим
            if (нормативныйДокумент != null)
                return;

            //Получаем нормативный документ у карточки
            нормативныйДокумент = инвентарнаяКарточка.СвязанныйОбъект[СвязьКарточкиСДокументом];
            if (нормативныйДокумент == null)
                return;

            ТекущийОбъект.СвязанныйОбъект[НормативныйДокументСвязь] = нормативныйДокумент;
        }
        else
        {
            if (нормативныйДокумент == null)
                return;

            инвентарнаяКарточка = нормативныйДокумент.СвязанныйОбъект[СвязьКарточкиСДокументом];
            if (инвентарнаяКарточка == null)
                return;

            ТекущийОбъект.СвязанныйОбъект[ИнвентарнаяКарточкаСвязь] = инвентарнаяКарточка;
        }

    }

    public void ЗаменитьФайл()
    {
        Объект файлИзменения = ТекущийОбъект.СвязанныйОбъект["50941995-2591-4528-9765-e7d0ea281c2e"];
        if (файлИзменения == null) return;

        Объект нормативныйДокумент = ТекущийОбъект.СвязанныйОбъект["85e427d2-59ae-4f3a-ba55-a926905c1b16"];
        if (нормативныйДокумент == null) return;

        Объект файл = нормативныйДокумент.СвязанныйОбъект["04f51b77-d2f8-448d-8778-df3bb97ea625"];

        if (ТекущийОбъект["8d6c05c0-a78c-4506-af1e-9bdd12585332"] == 1 && файл != null) СоздатьНулевоеИзменение(нормативныйДокумент, файл);// если Номер изменения == 1

        нормативныйДокумент.СвязанныйОбъект["04f51b77-d2f8-448d-8778-df3bb97ea625"] = файлИзменения;
        нормативныйДокумент.Сохранить();
    }

    private void СоздатьНулевоеИзменение(Объект нормативныйДокумент, Объект файл)
    {
        //если уже нулевое есть
        if (нормативныйДокумент.СвязанныеОбъекты["85e427d2-59ae-4f3a-ba55-a926905c1b16"].FirstOrDefault(x => x["8d6c05c0-a78c-4506-af1e-9bdd12585332"] == 0) != null) return;
       
        Объект нулевоеИзменение = СоздатьОбъект("98c4aa69-72f4-4af2-8520-865146f5e67d", "5cde70cb-c2f0-4959-b9b5-46f76e3cb71b");//Изменения НД, Изменение НД

        нулевоеИзменение["8d6c05c0-a78c-4506-af1e-9bdd12585332"] = 0;//Номер изменения
        нулевоеИзменение.СвязанныйОбъект["50941995-2591-4528-9765-e7d0ea281c2e"] = файл;//Файл изменения

        нулевоеИзменение.СвязанныйОбъект["85e427d2-59ae-4f3a-ba55-a926905c1b16"] = нормативныйДокумент;//связь Нормативный документ
        нулевоеИзменение.Сохранить();
    }
}
